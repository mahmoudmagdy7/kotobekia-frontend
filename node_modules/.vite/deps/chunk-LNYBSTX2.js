import {
  clsx,
  dataAttr,
  forwardRef,
  mapPropsVariants,
  skeleton
} from "./chunk-775JVEIY.js";
import {
  require_jsx_runtime
} from "./chunk-53TI3G6C.js";
import {
  require_react
} from "./chunk-64YSJXBX.js";
import {
  __toESM
} from "./chunk-WGAPYIUP.js";

// node_modules/@nextui-org/skeleton/dist/chunk-Q572LSEI.mjs
var import_react = __toESM(require_react(), 1);
function useSkeleton(originalProps) {
  const [props, variantProps] = mapPropsVariants(originalProps, skeleton.variantKeys);
  const { as, children, isLoaded = false, className, classNames, ...otherProps } = props;
  const Component = as || "div";
  const slots = (0, import_react.useMemo)(
    () => skeleton({
      ...variantProps
    }),
    [...Object.values(variantProps), children]
  );
  const baseStyles = clsx(classNames == null ? void 0 : classNames.base, className);
  const getSkeletonProps = (props2 = {}) => {
    return {
      "data-loaded": dataAttr(isLoaded),
      className: slots.base({ class: clsx(baseStyles, props2 == null ? void 0 : props2.className) }),
      ...otherProps
    };
  };
  const getContentProps = (props2 = {}) => {
    return {
      className: slots.content({ class: clsx(classNames == null ? void 0 : classNames.content, props2 == null ? void 0 : props2.className) })
    };
  };
  return { Component, children, slots, classNames, getSkeletonProps, getContentProps };
}

// node_modules/@nextui-org/skeleton/dist/chunk-26CMBM6O.mjs
var import_jsx_runtime = __toESM(require_jsx_runtime(), 1);
var Skeleton = forwardRef((props, ref) => {
  const { Component, children, getSkeletonProps, getContentProps } = useSkeleton({ ...props });
  return (0, import_jsx_runtime.jsx)(Component, { ref, ...getSkeletonProps(), children: (0, import_jsx_runtime.jsx)("div", { ...getContentProps(), children }) });
});
Skeleton.displayName = "NextUI.Skeleton";
var skeleton_default = Skeleton;

export {
  useSkeleton,
  skeleton_default
};
//# sourceMappingURL=chunk-LNYBSTX2.js.map
